name: deploy

inputs:
  sasUrl:
    required: true
runs:
  using: "composite"
  steps:
    - name: Detect package manager
      shell: bash
      id: detect-package-manager
      run: |
        if [ -f "${{ github.workspace }}/yarn.lock" ]; then
          echo "::set-output name=manager::yarn"
          echo "::set-output name=command::install"
          echo "::set-output name=runner::yarn"
          exit 0
        elif [ -f "${{ github.workspace }}/package.json" ]; then
          echo "::set-output name=manager::npm"
          echo "::set-output name=command::ci"
          echo "::set-output name=runner::npx --no-install"
          exit 0
        else
          echo "Unable to determine packager manager"
          exit 1
        fi
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: "16"
        cache: ${{ steps.detect-package-manager.outputs.manager }}
    - name: Restore cache
      uses: actions/cache@v3
      with:
        path: |
          .next/cache
        # Generate a new cache whenever packages or source files change.
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
        # If source files changed but packages didn't, rebuild from a prior cache.
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
    - name: Install dependencies
      shell: bash    
      run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
    - name: Build with Next.js
      run: ${{ steps.detect-package-manager.outputs.runner }} next build
      shell: bash
    - name: Static HTML export with Next.js
      run: ${{ steps.detect-package-manager.outputs.runner }} next export
      shell: bash
    - name: Deploy to Azure
      uses: TravisSpomer/deploy-to-azure-storage@v1.5.0
      with:
        source-path: out/public
        sas-url: ${{ inputs.sasUrl }}
